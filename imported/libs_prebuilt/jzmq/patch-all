diff -Naur jzmq-old/configure.in jzmq-new/configure.in
--- jzmq-old/configure.in	2015-05-31 11:53:03.842933600 +0200
+++ jzmq-new/configure.in	2015-06-02 06:22:17.567287400 +0200
@@ -107,10 +107,10 @@
 AC_SUBST(JAVAROOT)
 
 # Checks for libraries.
-AX_JNI_INCLUDE_DIR
-for JNI_INCLUDE_DIR in $JNI_INCLUDE_DIRS; do
-  CPPFLAGS="$CPPFLAGS -I$JNI_INCLUDE_DIR"
-done
+#AX_JNI_INCLUDE_DIR
+#for JNI_INCLUDE_DIR in $JNI_INCLUDE_DIRS; do
+#  CPPFLAGS="$CPPFLAGS -I$JNI_INCLUDE_DIR"
+#done
 AC_SUBST(CPPFLAGS)
 
 # Checks for typedefs, structures, and compiler characteristics.
diff -Naur jzmq-old/src/main/c++/Context.cpp jzmq-new/src/main/c++/Context.cpp
--- jzmq-old/src/main/c++/Context.cpp	2015-05-31 11:53:03.845933800 +0200
+++ jzmq-new/src/main/c++/Context.cpp	2015-06-02 06:04:35.925200900 +0200
@@ -53,6 +53,19 @@
 }
 
 /**
+ * Called to construct a Java Context object from existing context.
+ */
+JNIEXPORT void JNICALL
+Java_org_zeromq_ZMQ_00024Context_constructExisting (JNIEnv *env, jobject obj, jlong contextPointer)
+{
+    void *c = get_context (env, obj);
+    if (c)
+        return;
+        
+    put_context (env, obj, (void*) contextPointer);
+}
+
+/**
  * Called to destroy a Java Context object.
  */
 JNIEXPORT void JNICALL
diff -Naur jzmq-old/src/main/java/org/zeromq/EmbeddedLibraryTools.java jzmq-new/src/main/java/org/zeromq/EmbeddedLibraryTools.java
--- jzmq-old/src/main/java/org/zeromq/EmbeddedLibraryTools.java	2015-05-31 11:53:03.848933900 +0200
+++ jzmq-new/src/main/java/org/zeromq/EmbeddedLibraryTools.java	2015-06-02 05:55:22.665874100 +0200
@@ -16,10 +16,13 @@
 
 public class EmbeddedLibraryTools {
 
-    public static final boolean LOADED_EMBEDDED_LIBRARY;
+    // changed for static linking with jzmq
+    //public static final boolean LOADED_EMBEDDED_LIBRARY;
+    public static final boolean LOADED_EMBEDDED_LIBRARY = false;
 
     static {
-        LOADED_EMBEDDED_LIBRARY = loadEmbeddedLibrary();
+        // commented for static linking with jzmq
+        //LOADED_EMBEDDED_LIBRARY = loadEmbeddedLibrary();
     }
 
     public static String getCurrentPlatformIdentifier() {
diff -Naur jzmq-old/src/main/java/org/zeromq/ZMQ.java jzmq-new/src/main/java/org/zeromq/ZMQ.java
--- jzmq-old/src/main/java/org/zeromq/ZMQ.java	2015-05-31 11:53:03.851934100 +0200
+++ jzmq-new/src/main/java/org/zeromq/ZMQ.java	2015-06-02 06:04:35.922200700 +0200
@@ -36,8 +36,9 @@
 
     static {
         // if no embedded native library, revert to loading from java.library.path
-        if (!EmbeddedLibraryTools.LOADED_EMBEDDED_LIBRARY)
-            System.loadLibrary("jzmq");
+        // commented for static linking with jzmq
+        //if (!EmbeddedLibraryTools.LOADED_EMBEDDED_LIBRARY)
+        //    System.loadLibrary("jzmq");
     }
 
     // Values for flags in Socket's send and recv functions.
@@ -429,6 +430,10 @@
         return new Context(ioThreads);
     }
 
+    public static Context existingContext(long contextPointer) {
+        return new Context(contextPointer);
+    }
+
     /**
      * Inner class: Context.
      */
@@ -485,9 +490,15 @@
             construct(ioThreads);
         }
 
+        protected Context(long contextPointer) {
+            constructExisting(contextPointer);
+        }
+
         /** Initialize the JNI interface */
         protected native void construct(int ioThreads);
 
+        protected native void constructExisting(long contextPointer);
+
         /** Free all resources used by JNI interface. */
         protected native void destroy();
 
@@ -526,8 +537,9 @@
         private static native void nativeInit();
 
         static {
-            if (!EmbeddedLibraryTools.LOADED_EMBEDDED_LIBRARY)
-                System.loadLibrary("jzmq");
+            // commented for static linking with jzmq
+            //if (!EmbeddedLibraryTools.LOADED_EMBEDDED_LIBRARY)
+            //    System.loadLibrary("jzmq");
             nativeInit();
         }
 
